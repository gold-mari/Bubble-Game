//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""ea350086-4d31-4221-b7a0-f18502762d65"",
            ""actions"": [
                {
                    ""name"": ""Affirm"",
                    ""type"": ""Button"",
                    ""id"": ""ecde2c04-d1c6-4d41-abe9-df9bf2738813"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Deny"",
                    ""type"": ""Button"",
                    ""id"": ""265465be-f42f-4d04-adad-89db7ed840fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pointer"",
                    ""type"": ""Value"",
                    ""id"": ""c39025b7-e622-48e1-aa06-8079f2a840b4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Stick"",
                    ""type"": ""Value"",
                    ""id"": ""069cccf7-fb54-457f-bf81-0648c391566d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIMove"",
                    ""type"": ""Value"",
                    ""id"": ""59da6e5b-867d-4ed0-a2b7-1aef78e1ac17"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIClick"",
                    ""type"": ""Button"",
                    ""id"": ""e5650806-cc23-4a4b-8732-6c27444280a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""037601cd-cbbb-4343-9964-e131bff90c9e"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Affirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a2866a6-96e1-4b01-bdf1-220c13d25db8"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Affirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ee6b21b-d063-4661-a0b9-41734ea3b038"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Deny"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7fdb3ac-3f0c-4b58-9f35-bb17462c10be"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Deny"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b87dfa19-6f6d-411d-b847-9ad5242a1ffd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Deny"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd57ead4-a046-4358-bb33-a03077d48301"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Pointer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8eba643d-11a9-4b5a-a359-3715393cf66f"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""f06deff3-9e01-4047-9ab1-92d2ca40f62d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""982098e0-64ac-43ca-b1ad-471c18f47a69"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""75f79aea-41ab-4e59-a09a-a6758884c67b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""de893300-4b27-4924-a359-618db5b1379a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c163cf69-1b3f-45c7-aa5a-e1e60b59848e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ad1d023e-b525-422d-b284-1984f93cf516"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8f88e618-ed1c-42ec-805d-31e9dd2ea285"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fe6b70db-cf75-4ebd-aebc-527829b27fc0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""44f40f88-1969-4ac5-9b89-03342d20f458"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UIMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d88eae35-cc10-44a4-b4e6-89db40803445"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8449288-2976-4e35-8469-1228e55369c9"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_Affirm = m_Main.FindAction("Affirm", throwIfNotFound: true);
        m_Main_Deny = m_Main.FindAction("Deny", throwIfNotFound: true);
        m_Main_Pointer = m_Main.FindAction("Pointer", throwIfNotFound: true);
        m_Main_Stick = m_Main.FindAction("Stick", throwIfNotFound: true);
        m_Main_UIMove = m_Main.FindAction("UIMove", throwIfNotFound: true);
        m_Main_UIClick = m_Main.FindAction("UIClick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private IMainActions m_MainActionsCallbackInterface;
    private readonly InputAction m_Main_Affirm;
    private readonly InputAction m_Main_Deny;
    private readonly InputAction m_Main_Pointer;
    private readonly InputAction m_Main_Stick;
    private readonly InputAction m_Main_UIMove;
    private readonly InputAction m_Main_UIClick;
    public struct MainActions
    {
        private @InputActions m_Wrapper;
        public MainActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Affirm => m_Wrapper.m_Main_Affirm;
        public InputAction @Deny => m_Wrapper.m_Main_Deny;
        public InputAction @Pointer => m_Wrapper.m_Main_Pointer;
        public InputAction @Stick => m_Wrapper.m_Main_Stick;
        public InputAction @UIMove => m_Wrapper.m_Main_UIMove;
        public InputAction @UIClick => m_Wrapper.m_Main_UIClick;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void SetCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterface != null)
            {
                @Affirm.started -= m_Wrapper.m_MainActionsCallbackInterface.OnAffirm;
                @Affirm.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnAffirm;
                @Affirm.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnAffirm;
                @Deny.started -= m_Wrapper.m_MainActionsCallbackInterface.OnDeny;
                @Deny.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnDeny;
                @Deny.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnDeny;
                @Pointer.started -= m_Wrapper.m_MainActionsCallbackInterface.OnPointer;
                @Pointer.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnPointer;
                @Pointer.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnPointer;
                @Stick.started -= m_Wrapper.m_MainActionsCallbackInterface.OnStick;
                @Stick.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnStick;
                @Stick.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnStick;
                @UIMove.started -= m_Wrapper.m_MainActionsCallbackInterface.OnUIMove;
                @UIMove.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnUIMove;
                @UIMove.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnUIMove;
                @UIClick.started -= m_Wrapper.m_MainActionsCallbackInterface.OnUIClick;
                @UIClick.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnUIClick;
                @UIClick.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnUIClick;
            }
            m_Wrapper.m_MainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Affirm.started += instance.OnAffirm;
                @Affirm.performed += instance.OnAffirm;
                @Affirm.canceled += instance.OnAffirm;
                @Deny.started += instance.OnDeny;
                @Deny.performed += instance.OnDeny;
                @Deny.canceled += instance.OnDeny;
                @Pointer.started += instance.OnPointer;
                @Pointer.performed += instance.OnPointer;
                @Pointer.canceled += instance.OnPointer;
                @Stick.started += instance.OnStick;
                @Stick.performed += instance.OnStick;
                @Stick.canceled += instance.OnStick;
                @UIMove.started += instance.OnUIMove;
                @UIMove.performed += instance.OnUIMove;
                @UIMove.canceled += instance.OnUIMove;
                @UIClick.started += instance.OnUIClick;
                @UIClick.performed += instance.OnUIClick;
                @UIClick.canceled += instance.OnUIClick;
            }
        }
    }
    public MainActions @Main => new MainActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IMainActions
    {
        void OnAffirm(InputAction.CallbackContext context);
        void OnDeny(InputAction.CallbackContext context);
        void OnPointer(InputAction.CallbackContext context);
        void OnStick(InputAction.CallbackContext context);
        void OnUIMove(InputAction.CallbackContext context);
        void OnUIClick(InputAction.CallbackContext context);
    }
}
